#!/bin/bash

source $HOME/.wash/shell/config.sh

# Special stuff {{{
# I don't want to save many same commands and other short ones:
HISTIGNORE="&:help:info:exit:ls:ll:cd:cd -:pw:pwd:bc"
HISTIGNORE="${HISTIGNORE}:git st"
HISTIGNORE="${HISTIGNORE}:vash:vimpwd"
export HISTIGNORE
# Setting size of bash_history
export HISTFILESIZE=10000
# Language parameters (for things such as svn):
export LANG="en_US.UTF-8"
export EDITOR="vim"
export VISUAL="vim"
export SUDO_EDITOR="vim"
alias please="sudo"
# Homepage for elinks:
export WWW_HOME="http://www.bash.org/?latest"

# Up and down arrows are matlab-like ## {{{
bind '"\e[A":history-search-backward'
bind '"\e[B":history-search-forward'
# }}}

# Tells the terminal to kill background processes on exit
# (If you want daemons that are not binded to the window, use the command "nohup".)
shopt -s huponexit
# For the LS command to be readable on a dark background
export LSCOLORS="gxfxcxdxbxegedabagacad"

# PS1 ## {{{
function git_ps1() {
    branch=$(git branch --color=never 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')

    if [ "$branch" = "" ]; then
        return
    fi

    staged=""
    dirty=""
    untracked=""

    git diff --no-ext-diff --cached --quiet || staged="+"
    git diff --no-ext-diff --quiet || dirty="*"
    git ls-files --others --exclude-standard --directory --no-empty-directory --error-unmatch -- ':/*' > /dev/null 2> /dev/null && untracked="%"

    overall="$staged$dirty$untracked"

    if git symbolic-ref -q HEAD > /dev/null; then
        synced=""

        localHead=$(git rev-parse HEAD)
        remoteTracking=$(git rev-parse --abbrev-ref --symbolic-full-name "@{u}" 2> /dev/null)
        remoteHead=""
        if [ "$remoteTracking" != "" ]; then
            remoteHead=$(git rev-parse "$remoteTracking" 2> /dev/null)
        fi
        if [ "$localHead" != "$remoteHead" ]; then
            synced="#"
        fi

        overall="$overall$synced"
    fi

    nc=$(tput sgr0)
    white=$(tput setaf 7)
    red=$(tput setaf 1)
    printf '\001%s\002[\001%s\002%s\001%s\002%s\001%s\002]' "$nc" "$red" "$branch" "$white" "$overall" "$nc"
}


customize_ps1() {
    cyan='\[\033[1;36m\]'
    bold_red='\[\033[1;31m\]'
    brown='\[\033[0;33m\]'
    lightblue='\[\033[1;34m\]'
    nc='\[\033[0m\]' # = No color

    PS1=""

    # Note about checking $?:
    # This will give the return status of the last command.
    # If in PS1 we start calling other commands (like below git_ps1 or screen_prompt_info) then $? gets updated
    PS1+='$(e=$?; (( e )) && echo "'"$bold_red"'xxxxx $e xxxxx ")'  # check last command

    PS1+="$brown\D{%H:%M:%S}"  # time
    PS1+="$nc@"
    PS1+="$brown\h "  # hostname
    PS1+="$lightblue\W"  # CWD

    PS1+='$(git_ps1) '
    PS1+="$cyan"'$(screen_prompt_info)'
    PS1+="$nc\$ "

    export PS1
}

customize_ps1
# }}}
# }}}


function vix() {
    if [ $# = 0 ]; then
        ls ./*.tex > /dev/null 2>&1 && vim -o ./*.tex

    else
        files=""

        for file in "$@"; do
            # If filename provides .tex extension, it seems like file is already a full filename
            if [ "${file%.tex}" = "$file" ]; then
                # No .tex extension, glob with it
                file="*$file*.tex"
            fi

            # Check file exists (with glob)
            # shellcheck disable=SC2086
            ls $file > /dev/null 2>&1 && files="$files $file"
        done


        if [ "$files" != "" ]; then
            # Execute vim with glob
            # shellcheck disable=SC2086
            vim -o $files
        fi
    fi
}


export switchplus="ssh-728988-gi@134.119.0.135"
alias wsh="ssh \$switchplus"

function wcp() {
    one=$1
    if (( $# == 1 )); then
        scp -r "$switchplus:$one" .
    else
        one=$1
        shift
        scp -r "$*" "$switchplus:$one"
    fi
}


# pwd function that displays absolute and relative path only if they're different {{{
function pw()
{
    local relative, absolute

    set +P
    relative=$(pwd)

    set -P
    absolute=$(pwd)

    set +P

    if [[ "$absolute" == "$relative" ]]; then
        echo "$absolute"

    else
        echo " +Rel: $relative"
        echo " +Abs: $absolute"
    fi
}
# }}}

complete -f -X '!*.tex' latexpawa

alias GEf16="sudo vim /opt/google-earth/resources/flightsim/aircraft/f16.acf"


if [[ ${OSTYPE:0:6} == "darwin" ]] || [[ ${OSTYPE:0:6} == "Darwin" ]]; then
    # shellcheck source=./bash/mac.bash
    source "$vash/bash/mac.bash"
else
    # shellcheck source=./bash/linux.bash
    source "$vash/bash/linux.bash"
fi
