#!/bin/bash

source $HOME/.wash/shell/config

# Special stuff {{{
# I don't want to save many same commands and other short ones:
HISTIGNORE="&:help:info:exit:ls:ll:cd:cd -:pw:pwd:bc"
HISTIGNORE="${HISTIGNORE}:git st"
HISTIGNORE="${HISTIGNORE}:vash:vimpwd"
export HISTIGNORE
# Setting size of bash_history
export HISTFILESIZE=10000
# Language parameters (for things such as svn):
export LANG="en_US.UTF-8"
export EDITOR="vim"
export VISUAL="vim"
export SUDO_EDITOR="vim"
# Homepage for elinks:
export WWW_HOME="http://www.bash.org/?latest"

# Up and down arrows are matlab-like ## {{{
bind '"\e[A":history-search-backward'
bind '"\e[B":history-search-forward'
# }}}

# Tells the terminal to kill background processes on exit
# (If you want daemons that are not binded to the window, use the command "nohup".)
shopt -s huponexit
# For the LS command to be readable on a dark background
export LSCOLORS="gxfxcxdxbxegedabagacad"
# PS1 colors ## {{{
# Colors and styles ## {{{
# Foreground colors ## {{{
#black='\[\033[0;30m\]'
#blue='\[\033[0;34m\]'
#green='\[\033[0;32m\]'
cyan='\[\033[0;36m\]'
red='\[\033[0;31m\]'
purple='\[\033[0;35m\]'
brown='\[\033[0;33m\]'
#lightgray='\[\033[0;37m\]'
#darkgray='\[\033[1;30m\]'
lightblue='\[\033[1;34m\]'
#lightgreen='\[\033[1;32m\]'
#lightcyan='\[\033[1;36m\]'
#lightred='\[\033[1;31m\]'
#lightpurple='\[\033[1;35m\]'
#yellow='\[\033[1;33m\]'
#white='\[\033[1;37m\]'
nc='\[\033[0m\]' # = No color
# }}}
# Background colors (useful?) ## {{{
#Bblack='\[\033[40m\]'
#Bred='\[\033[41m\]'
#Bgreen='\[\033[42m\]'
#Byellow='\[\033[43m\]'
#Bblue='\[\033[44m\]'
#Bmagenta='\[\033[45m\]'
#Bcyan='\[\033[46m\]'
#Bwhite='\[\033[47m\]'
# }}}
# Styles ## {{{
boldOn='\[\033[1m\]'
#underOn='\[\033[4m\]'
blinkOn='\[\033[5m\]'
#inverseOn='\[\033[7m\]'
styleOff='\[\033[m\]'
# }}}
# }}}
# PS1 ## {{{
function gitPS1() {
	branch=$(git branch --color=never 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')

	if [ "$branch" = "" ]; then
		return
	fi

	staged=""
	dirty=""
	untracked=""

	git diff --no-ext-diff --cached --quiet || staged="+"
	git diff --no-ext-diff --quiet || dirty="*"
	git ls-files --others --exclude-standard --directory --no-empty-directory --error-unmatch -- ':/*' > /dev/null 2> /dev/null && untracked="%"

	overall="$staged$dirty$untracked"

	if git symbolic-ref -q HEAD > /dev/null; then
		synced=""

		localHead=$(git rev-parse HEAD)
		remoteTracking=$(git rev-parse --abbrev-ref --symbolic-full-name "@{u}" 2> /dev/null)
		remoteHead=""
		if [ "$remoteTracking" != "" ]; then
			remoteHead=$(git rev-parse "$remoteTracking" 2> /dev/null)
		fi
		if [ "$localHead" != "$remoteHead" ]; then
			synced="#"
		fi

		overall="$overall$synced"
	fi

	if [ "$overall" != "" ]; then
		overall=":$overall"
	fi

	echo " @$branch$overall"
}
if [[ $UID -eq 0 ]]; then
	export PS1="$brown\t $red$boldOn$blinkOn### ROOT ###$styleOff $purple\w$brown\$(gitPS1) $nc# $red"
	#export PROMPT_COMMAND='/bin/echo -ne "\033]0;## R*O*O*T ## @${HOSTNAME%%.*}:${PWD/#${HOME}/~}\007"'
else
	export PS1="$brown\t $cyan\u$nc@$red\h$nc: $lightblue\W$brown\$(gitPS1) $nc$ "
	#export PROMPT_COMMAND='/bin/echo -ne "\033]0;$USER@${HOSTNAME%%.*}:${PWD/#${HOME}/~}\007"'
fi
# }}}
# }}}
# }}}


function vix() {
	if [ $# = 0 ]; then
		ls ./*.tex > /dev/null 2>&1 && vim -o ./*.tex

	else
		files=""

		for file in "$@"; do
			# If filename provides .tex extension, it seems like file is already a full filename
			if [ "${file%.tex}" = "$file" ]; then
				# No .tex extension, glob with it
				file="*$file*.tex"
			fi

			# Check file exists (with glob)
			# shellcheck disable=SC2086
			ls $file > /dev/null 2>&1 && files="$files $file"
		done


		if [ "$files" != "" ]; then
			# Execute vim with glob
			# shellcheck disable=SC2086
			vim -o $files
		fi
	fi
}


export switchplus="ssh-728988-gi@134.119.0.135"
alias wsh="ssh \$switchplus"

function wcp() {
	one=$1
	if (( $# == 1 )); then
		scp -r "$switchplus:$one" .
	else
		one=$1
		shift
		scp -r "$*" "$switchplus:$one"
	fi
}


# pwd function that displays absolute and relative path only if they're different {{{
function pw()
{
	local relative, absolute

	set +P
	relative=$(pwd)

	set -P
	absolute=$(pwd)

	set +P

	if [[ "$absolute" == "$relative" ]]; then
		echo "$absolute"

	else
		echo " +Rel: $relative"
		echo " +Abs: $absolute"
	fi
}
# }}}

complete -f -X '!*.tex' latexpawa

alias GEf16="sudo vim /opt/google-earth/resources/flightsim/aircraft/f16.acf"


if [[ ${OSTYPE:0:6} == "darwin" ]] || [[ ${OSTYPE:0:6} == "Darwin" ]]; then
	# shellcheck source=./bash/mac.bash
	source "$vash/bash/mac.bash"
else
	# shellcheck source=./bash/linux.bash
	source "$vash/bash/linux.bash"
fi
